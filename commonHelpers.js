import{S as y,i as g,a as h}from"./assets/vendor-527658dd.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))l(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&l(i)}).observe(document,{childList:!0,subtree:!0});function p(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function l(e){if(e.ep)return;e.ep=!0;const s=p(e);fetch(e.href,s)}})();const b=document.querySelector(".form-search"),n=document.querySelector(".btn-more"),d=document.querySelector(".gallery-list"),c=document.querySelector(".loader-wrapper"),P="42027651-7bedd500762feb24dffc0a2de",L="https://pixabay.com/api/?",v={key:P,q:"",image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:40,page:1};let a=0;const r=new URLSearchParams(v),S={captionsData:"alt",captionPosition:"bottom",captionDelay:250},q={theme:"dark",class:"izi-toast-error-style",title:"Error",message:"Sorry, there are no images matching your search query. Please try again!",backgroundColor:"#EF4040",iconUrl:"./img/octagon.svg",position:"topRight",maxWidth:"25%"},w={position:"topRight",message:"We're sorry, there are no more posts to load"},x=new y(".gallery-list a",S);b.addEventListener("submit",M);n.addEventListener("click",O);function O(){c.style.display="flex",n.style.display="none",m(),u(c.getBoundingClientRect().height)}function M(t){t.preventDefault(),$(),c.style.display="flex",d.innerHTML="",r.set("q",t.target.elements.search.value),m(),this.reset()}function u(t){scrollBy({top:t,behavior:"smooth"})}function $(){a=0,r.set("page",1)}async function m(){try{const t=await E();if(t.totalHits>0?z(t):g.error(q),c.style.display="none",a===0&&(a=Math.ceil(t.totalHits/r.get("per_page")),a>1?n.style.display="block":n.style.display="none"),r.get("page")>a&&a!==0)return n.style.display="none",g.error(w);let o=Number(r.get("page"));r.set("page",o+=1)}catch(t){console.log(t)}}async function E(){return(await h.get(L+r)).data}const R=t=>t.map(({largeImageURL:o,webformatURL:p,tags:l,likes:e,views:s,comments:i,downloads:f})=>`<li class="gallery-item">
        <a class="gallery-link" href="${o}">
          <img class="gallery-image" src="${p}" alt="${l}" width="360" height="200" loading="lazy"/>
        </a>
        <div class="item-info">
        <p class="item-info-p">Likes <span>${e}</span></p>
        <p class="item-info-p">Views <span>${s}</span></p>
        <p class="item-info-p">Comments <span>${i}</span></p>
        <p class="item-info-p">Downloads <span>${f}</span></p>
        </div>
        </li>`).join("");function z(t){d.insertAdjacentHTML("beforeend",R(t.hits)),x.refresh(),u(d.childNodes[0].getBoundingClientRect().height*2),n.style.display="block"}
//# sourceMappingURL=commonHelpers.js.map
